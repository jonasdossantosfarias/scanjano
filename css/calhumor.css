// Seletores principais
const calendar = document.getElementById('calendar');
const currentMonthLabel = document.getElementById('current-month');
const inputDialog = document.getElementById('input-dialog');
const dialogDateDisplay = document.getElementById('dialog-date-display');
const dialogMoodSelect = document.getElementById('dialog-mood-select');
const dialogNote = document.getElementById('dialog-note');
const firebaseConfig = {
    apiKey: "AIzaSyB_KgO3n6BzWejWFwDJs0wwreS18QB_z40",
    authDomain: "calhumorjano.firebaseapp.com",
    projectId: "calhumorjano",
    storageBucket: "calhumorjano.appspot.com",
    messagingSenderId: "920817014794",
    appId: "1:920817014794:web:cce90cfd082a022621e7f3",
    measurementId: "G-2GKTHK0RMP"
};

// Inicialização Firebase
if (!firebase.apps.length) {
    firebase.initializeApp(firebaseConfig);
}

const auth = firebase.auth();
const db = firebase.firestore();

let currentDate = new Date();
let moodData = {}; // Dados de humor por dia

// Atualiza o calendário
function updateCalendar() {
    calendar.innerHTML = '';
    const year = currentDate.getFullYear();
    const month = currentDate.getMonth();

    currentMonthLabel.innerText = currentDate.toLocaleDateString('pt-BR', {
        month: 'long', year: 'numeric'
    });

    const firstDayOfMonth = new Date(year, month, 1).getDay();
    const daysInMonth = new Date(year, month + 1, 0).getDate();

    for (let i = 0; i < firstDayOfMonth; i++) {
        const emptyDay = document.createElement('div');
        calendar.appendChild(emptyDay);
    }

    for (let i = 1; i <= daysInMonth; i++) {
        const day = document.createElement('div');
        day.classList.add('day');
        const dayString = `${year}-${(month + 1).toString().padStart(2, '0')}-${i.toString().padStart(2, '0')}`;
        day.dataset.date = dayString;
        day.innerHTML = `<div class="date-label">${i}</div>`;

        if (moodData[dayString]) {
            const mood = moodData[dayString].mood;
            day.innerHTML += `<div class="emoji"><img src="imagens/emojis/${mood.toLowerCase()}.png" alt="${mood}"></div>`;
        }

        day.addEventListener('click', () => openInputDialog(dayString));
        calendar.appendChild(day);
    }
}

// Altera o mês
function changeMonth(direction) {
    currentDate.setMonth(currentDate.getMonth() + direction);
    updateCalendar();
}

// Abre o diálogo para registro de humor
function openInputDialog(date) {
    dialogDateDisplay.textContent = date.split('-').reverse().join('/');
    if (moodData[date]) {
        dialogMoodSelect.value = moodData[date].mood;
        dialogNote.value = moodData[date].note;
    } else {
        dialogMoodSelect.value = 'feliz';
        dialogNote.value = '';
    }
    inputDialog.style.display = 'block';
}

// Fecha o diálogo
function closeInputDialog() {
    inputDialog.style.display = 'none';
}

// Salva o humor no Firebase
async function saveMood() {
    const date = dialogDateDisplay.textContent.split('/').reverse().join('-');
    const mood = dialogMoodSelect.value;
    const note = dialogNote.value;

    try {
        const userId = auth.currentUser.uid;
        await db.collection('pacientes').doc(userId).collection('humor').doc(date).set({
            mood, note, date
        });
        moodData[date] = { mood, note };
        closeInputDialog();
        updateCalendar();
    } catch (error) {
        console.error('Erro ao salvar o humor:', error);
    }
}

// Carrega os dados de humor do Firebase
async function refreshMoodData() {
    try {
        const userId = auth.currentUser.uid;
        const snapshot = await db.collection('pacientes').doc(userId).collection('humor').get();
        snapshot.forEach(doc => {
            moodData[doc.id] = doc.data();
        });
        updateCalendar();
    } catch (error) {
        console.error('Erro ao carregar dados de humor:', error);
    }
}

document.addEventListener('DOMContentLoaded', () => {
    auth.onAuthStateChanged(user => {
        if (user) {
            refreshMoodData();
        } else {
            console.log('Usuário não autenticado.');
        }
    });
    updateCalendar();
});
